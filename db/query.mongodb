use("db_rappi_campus");
//CLIENTES
db.createCollection("clientes", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            title: "clientes",
            required: [
                "_id",
                "nombre",
                "apellido",
                "correo",
                "contrasena",
                "direccion_entrega",
                "numero_celular",
                "cedula",
                "fecha_nacimiento",
                "sexo",
            ],
            properties: {
                _id: { bsonType: "objectId" },
                id: {
                    bsonType: "int",
                    
                },
                nombre: {
                    bsonType: "string",
                    description: "El nombre es obligatorio y de tipo string"
                },
                apellido: {
                    bsonType: "string",
                    description: "El apellido es obligatorio y de tipo string"
                },
                correo: {
                    bsonType: "string",
                    description: "El correo es obligatorio y de tipo string"
                },
                contrasena: {
                    bsonType: "string",
                },
                direccion_entrega: {
                    bsonType: "string",
                    description: "El direccion_entrega es obligatorio y de tipo string"
                },
                numero_celular: {
                    bsonType: "string",
                    description: "El numero_celular es obligatorio y de tipo string"
                },
                cedula: {
                    bsonType: "string",
                    description: "El cedula es obligatorio y de tipo string"
                },
                fecha_nacimiento: {
                    bsonType: "string",
                    description: "El fecha_nacimiento es obligatorio y de tipo string"
                },
                sexo: {
                    enum: ["M", "F"],
                    description: "El sexo es obligatorio"
                },
            },
            additionalProperties: false,
        },
    },
});
db.clientes.createIndex({ id: 1 }, { unique: true });
db.clientes.createIndex({ cedula: 1 }, { unique: true });
db.clientes.createIndex({ correo: 1 }, { unique: true });
db.clientes.createIndex({ numero_celular: 1 }, { unique: true });

//REPARTIDORES
db.createCollection("repartidores", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            title: "repartidores",
            required: [
                "_id",
                "id",
                "nombre",
                "apellido",
                "correo",
                "contrasena",
                "numero_celular",
                "cedula",
                "fecha_nacimiento",
                "sexo",
                "tipo_vehiculo",
            ],
            properties: {
                _id: { bsonType: "objectId" },
                id: {
                    bsonType: "int",
                },
                nombre: {
                    bsonType: "string",
                },
                apellido: {
                    bsonType: "string",
                },
                correo: {
                    bsonType: "string",
                },
                contrasena: {
                    bsonType: "string",
                },
                numero_celular: {
                    bsonType: "string",
                },
                cedula: {
                    bsonType: "string",
                },
                fecha_nacimiento: {
                    bsonType: "string",
                },
                sexo: {
                    enum: ["M", "F"],
                },
                tipo_vehiculo: {
                    enum: ["Bicicleta", "Moto", "Carro"],
                },
            },
            additionalProperties: false,
        },
    },
});
db.repartidores.createIndex({ id: 1 }, { unique: true });
db.repartidores.createIndex({ cedula: 1 }, { unique: true });
db.repartidores.createIndex({ correo: 1 }, { unique: true });
db.repartidores.createIndex({ numero_celular: 1 }, { unique: true });

//PRODUCTOS
db.createCollection("productos", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            title: "productos",
            required: [
                "_id",
                "id",
                "id_restaurante",
                "nombre",
                "valor_unitario",
                "descripcion",
                "foto_producto",
                "stock",
            ],
            properties: {
                _id: { bsonType: "objectId" },
                id: {
                    bsonType: "int",
                },
                id_restaurante: {
                    bsonType: "int",
                },
                nombre: {
                    bsonType: "string",
                },
                valor_unitario: {
                    bsonType: "int",
                },
                descripcion: {
                    bsonType: "string",
                },
                foto_producto: {
                    bsonType: "string",
                },
                stock: {
                    bsonType: "int",
                },
            },
            additionalProperties: false,
        },
    },
});
db.productos.createIndex({ id: 1 }, { unique: true });

//PEDIDOS
db.createCollection("pedidos", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            title: "pedidos",
            required: [
                "_id",
                "id",
                "id_cliente",
                "id_repartidor",
                "id_restaurante",
                "productos",
                "metodo_pago",
                "valor_total",
                "fecha_pedido",
            ],
            properties: {
                _id: { bsonType: "objectId" },
                id: {
                    bsonType: "int",
                },
                id_pedido: {
                    bsonType: "int",
                },
                id_cliente: {
                    bsonType: "int",
                },
                id_repartidor: {
                    bsonType: "int",
                },
                id_restaurante: {
                    bsonType: "int",
                },
                productos: {
                    bsonType: "array",
                    items: {
                        bsonType: "object",
                        required: ["id_producto", "cantidad"],
                        properties: {
                            id_producto: {
                                bsonType: "int",
                            },
                            cantidad: {
                                bsonType: "int",
                            },
                        },
                    },
                },
                metodo_pago: {
                    enum: ["Efectivo", "Tarjeta"],
                },
                valor_total: {
                    bsonType: "int",
                },
                fecha_pedido: {
                    bsonType: "date",
                },
            },
            additionalProperties: false,
        },
    },
});
db.pedidos.createIndex({ id: 1 }, { unique: true });

//RESTAURANTES
db.createCollection("restaurantes", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            title: "restaurantes",
            required: [
                "_id",
                "id",
                "nombre",
                "direccion",
                "numero_celular",
                "correo",
                "contrasena",
                "horario_atencion",
                "foto_restaurante",
            ],
            properties: {
                _id: { bsonType: "objectId" },
                id: {
                    bsonType: "int",
                },
                nombre: {
                    bsonType: "string",
                },
                direccion: {
                    bsonType: "string",
                },
                numero_celular: {
                    bsonType: "string",
                },
                correo: {
                    bsonType: "string",
                },
                contrasena: {
                    bsonType: "string",
                },
                horario_atencion: {
                    bsonType: "string",
                },
                foto_restaurante: {
                    bsonType: "string",
                },
            },
            additionalProperties: false,
        },
    },
});
db.restaurantes.createIndex({ id: 1 }, { unique: true });
db.restaurantes.createIndex({ correo: 1 }, { unique: true });
db.restaurantes.createIndex({ numero_celular: 1 }, { unique: true });
db.restaurantes.createIndex({ nombre: 1 }, { unique: true });

//Documentos de prueba
db.clientes.insertMany([
    {
        id: 1,
        nombre: "Juan",
        apellido: "Perez",
        correo: "juanperez@gmail.com",
        contrasena: "123456",
        direccion_entrega: "Calle 1 # 1-1",
        numero_celular: "3000000000",
        cedula: "123456789",
        fecha_nacimiento: "1990-01-01",
        sexo: "M",
    },
    {
        id: 2,
        nombre: "Maria",
        apellido: "Gomez",
        correo: "mariagomez@gmail.com",
        contrasena: "123456",
        direccion_entrega: "Calle 2 # 2-2",
        numero_celular: "3000000001",
        cedula: "123456780",
        fecha_nacimiento: "1990-01-02",
        sexo: "F",
    },
]);
db.repartidores.insertMany([
    {
        id: 1,
        nombre: "Pedro",
        apellido: "Gomez",
        correo: "pedrogomez@gmail.com",
        contrasena: "123456",
        numero_celular: "3000000002",
        cedula: "123456781",
        fecha_nacimiento: "1990-01-03",
        sexo: "M",
        tipo_vehiculo: "Bicicleta",
    },
    {
        id: 2,
        nombre: "Luis",
        apellido: "Gomez",
        correo: "luisgomez@gmail.com",
        contrasena: "123456",
        numero_celular: "3000000003",
        cedula: "123456782",
        fecha_nacimiento: "1990-01-04",
        sexo: "M",
        tipo_vehiculo: "Moto",
    },
]);
db.productos.insertMany([
    {
        id: 1,
        id_restaurante: 1,
        nombre: "Hamburguesa",
        valor_unitario: 2000,
        descripcion: "Hamburguesa con queso",
        foto_producto:
            "https://assets.unileversolutions.com/recipes-v2/115358.jpg",
        stock: 10,
    },
    {
        id: 2,
        id_restaurante: 1,
        nombre: "Pizza",
        valor_unitario: 15000,
        descripcion: "Pizza de peperoni",
        foto_producto:
            "https://www.olivetto.com.co/wp-content/uploads/PizzaItalianaClasica-ImagenDestacada-1200x1800.jpg",
        stock: 10,
    },
]);
db.pedidos.insertMany([
    {
        id: 1,
        id_cliente: 1,
        id_repartidor: 1,
        id_restaurante: 1,
        productos: [
            {
                id_producto: 1,
                cantidad: 1,
            },
            {
                id_producto: 2,
                cantidad: 2,
            },
        ],
        metodo_pago: "Efectivo",
        valor_total: 35000,
        fecha_pedido: new Date(),
    },
    {
        id: 2,
        id_cliente: 2,
        id_repartidor: 2,
        id_restaurante: 1,
        productos: [
            {
                id_producto: 1,
                cantidad: 1,
            },
        ],
        metodo_pago: "Tarjeta",
        valor_total: 2000,
        fecha_pedido: new Date(),
    },
]);

db.restaurantes.insertMany([
    {
        id: 1,
        nombre: "Restaurante 1",
        direccion: "Calle 1 # 1-1",
        numero_celular: "3000000004",
        correo: "restaurante1@gmail.com",
        contrasena: "123456",
        horario_atencion: "Lunes a Viernes 8:00 am - 5:00 pm",
        foto_restaurante:
            "https://www.eltiempo.com/files/image_640_428/uploads/2019/08/22/5d5e9b3a1e0e7.jpeg",
    },
    {
        id: 2,
        nombre: "Restaurante 2",
        direccion: "Calle 2 # 2-2",
        numero_celular: "3000000005",
        correo: "restaurante2@gmail.com",
        contrasena: "123456",
        horario_atencion: "Lunes a Viernes 8:00 am - 5:00 pm",
        foto_restaurante:
            "https://www.eltiempo.com/files/image_640_428/uploads/2019/08/22/5d5e9b3a1e0e7.jpeg",
    },
]);

db.createCollection("roles", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            title: "roles",
            required: ["_id", "group", "permissions", "action"],
            properties: {
                _id: { bsonType: "objectId" },
                group: {
                    bsonType: "string",
                },
                permissions: {
                    bsonType: "array",
                    items: {
                        bsonType: "object",
                        required: ["resource", "methods", "action"],
                        properties: {
                            resource: {
                                bsonType: "string",
                            },
                            methods: {
                                bsonType: "array",
                                items: {
                                    bsonType: "string",
                                },
                            },
                            action: {
                                enum: ["allow", "deny"],
                            },
                        },
                    },
                },
                action: {
                    enum: ["allow", "deny"],
                },
            },
            additionalProperties: false,
        },
    },
});
db.roles.insertMany([
    {
        group: "clientes",
        permissions: [
            {
                resource: "clientes/*",
                methods: ["POST", "GET", "PUT"],
                action: "allow",
            },
            {
                resource: "pedidos/*",
                methods: ["POST", "GET", "PUT"],
                action: "allow",
            },
            {
                resource: "productos/*",
                methods: ["GET"],
                action: "allow",
            },
            {
                resource: "restaurantes/*",
                methods: ["GET"],
                action: "allow",
            },
            {
                resource: "repartidores/*",
                methods: ["GET"],
                action: "allow",
            },
        ],
        action: "deny",
    },
    {
        group: "repartidores",
        permissions: [
            {
                resource: "repartidores/*",
                methods: ["POST", "GET", "PUT"],
                action: "allow",
            },
            {
                resource: "pedidos/*",
                methods: ["GET"],
                action: "allow",
            },
            {
                resource: "restaurantes/*",
                methods: ["GET"],
                action: "allow",
            },
            {
                resource: "productos/*",
                methods: ["GET"],
                action: "allow",
            },
            {
                resource: "clientes/*",
                methods: ["GET"],
                action: "allow",
            },
        ],
        action: "deny",
    },
    {
        group: "restaurantes",
        permissions: [
            {
                resource: "restaurantes/*",
                methods: ["POST", "GET", "PUT"],
                action: "allow",
            },
            {
                resource: "pedidos/*",
                methods: ["GET"],
                action: "allow",
            },
            {
                resource: "productos/*",
                methods: ["POST", "GET", "PUT"],
                action: "allow",
            },
            {
                resource: "clientes/*",
                methods: ["GET"],
                action: "allow",
            },
            {
                resource: "repartidores/*",
                methods: ["GET"],
                action: "allow",
            },
        ],
        action: "deny",
    },
]);

//AUTOINCREMENTO
db.createCollection("counters");
db.counters.insertMany([
    { _id: "clientesID", sequence_value: 3 },
    { _id: "repartidoresID", sequence_value: 3 },
    { _id: "pedidosID", sequence_value: 3 },
    { _id: "productosID", sequence_value: 3 },
    { _id: "restaurantesID", sequence_value: 3 },
]);